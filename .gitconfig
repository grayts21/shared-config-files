[alias]
 # adis Discard changes for sepcified file, you can specify . for all
	adis = "!echo git checkout --;git checkout --"
 # alist, alias config list commands
	alist = "!echo git config --list;git config --list"
	alias = "!echo git config --list | grep 'alias';git config --list | grep 'alias'"
	aliasl = "!echo git config --list | grep 'alias' | grep $1;git config --list | grep 'alias' | grep "
 # amc amend last commit
	amc = "!echo git commit --amend -m $1 $2 $3 $4 $5;git commit --amend -m"
 # ast = status --short --branch --show-stash
	ast = "!echo git status --short --branch --show-stash;git status --short --branch --show-stash"
 # astt status, no untracked files (which takes more time)
	astt = "!echo git status --short --branch --show-stash -uno $1 $2 $3 $4 $5;git status --short --branch --show-stash -uno"
	acm = "!echo git commit --all --branch -m $1 $2 $3 $4 $5;git commit --all --branch -m"
	acma = "!echo git commit -m $1 $2 $3 $4 $5;git commit -m"
 # acme commit without a message on the command line (will use editor)
	acme = "!echo git commit --all --branch $1 $2 $3 $4 $5;git commit --all --branch"
	aco = "!echo git checkout $1 $2 $3 $4 $5;git checkout"
	co = "!echo git checkout $1 $2 $3 $4 $5;git checkout"
	abr = "!echo git branch $1 $2 $3 $4 $5;git branch"
	br = "!echo git branch $1 $2 $3 $4 $5;git branch"
	aba = "!echo git branch -vva $1 $2 $3 $4 $5;git branch -vva"
 # acp add, commit param 1, push
	acp = "!echo --- git add ---;git add .;echo --- git commit ---;git commit -m \"$1\";echo --- git push origin HEAD ---;git push origin HEAD;echo --- Message used: "
 # amto merge to param 1 branch # Param is branch to merge to (develop or master)
	amto = "!echo git checkout $1 $2 $3 $4 $5 - git merge @{-1};git checkout $1;git merge @{-1}"
 # Param is branch to merge to (develop or master)
	amtos = "!echo git checkout $1 $2 $3 $4 $5 - git merge --squash @{-1};git checkout $1;git merge --squash @{-1}"
 # amh merge --no-ff no fast forward, creates a commit
	amh = "!echo   amm=normal merge -- amnf=--no-ff -- amff=--ff-only"
	amm = "!echo git merge $1 $2 $3 $4 $5;git merge"
	amnf = "!echo git merge --no-ff $1 $2 $3 $4 $5;git merge --no-ff"
 # amf merge -ff-only only run if fast forward can be used
	amff = "!echo git merge --ff-only $1 $2 $3 $4 $5;git merge --ff-only"
	alo = "!echo git log --pretty=lg --graph $1 $2 $3 $4 $5;git log --pretty=lg --graph"
	alog = "!echo git log --pretty=lg --graph $1 $2 $3 $4 $5;git log --pretty=lg --graph"
	ala = "!echo git log --all --pretty=lg --graph $1 $2 $3 $4 $5;git log --all --pretty=lg --graph"
	alh = "!echo git log master..HEAD --pretty=lg --graph $1 $2 $3 $4 $5;git log master..HEAD --pretty=lg --graph"
	alm = "!echo git log master --pretty=lg --graph $1 $2 $3 $4 $5;git log master --pretty=lg --graph"
	ald = "!echo git log develop --pretty=lg --graph $1 $2 $3 $4 $5;git log develop --pretty=lg --graph"
 # auc undo last commit to working area
	auc = "!echo git reset --mixed HEAD~1 $1 $2 $3 $4 $5;git reset --mixed HEAD~1"
 # aum reset and put in workspace
	aum = "!echo git reset --mixed $1 $2 $3 $4 $5;git reset --mixed"
 # aus remove from staging, specify a file or .
	aus = "!echo git reset HEAD $1 $2 $3 $4 $5;git reset HEAD"
	arh = "!echo git reset --hard $1 $2 $3 $4 $5;git reset --hard"
 # atp Show what would be pushed
	atp = "!echo git log master..HEAD --pretty=lg --graph $1 $2 $3 $4 $5;git log master..HEAD --pretty=lg --graph"
 # ari rebase interactive
	ari = "!echo git rebase --interactive --stat $1 $2 $3 $4 $5;git rebase --interactive --stat"
	asqu = "!echo git rebase --interactive --stat --autosquash --root $1 $2 $3 $4 $5;git rebase --interactive --stat --autosquash --root"
	aadd = "!echo git add -A # add and look for renamed files $1 $2 $3 $4 $5;git add -A # add and look for renamed files"
	apu = "!echo git push origin HEAD $1 $2 $3 $4 $5;git push origin HEAD"
	pu = "!echo git push origin HEAD $1 $2 $3 $4 $5;git push origin HEAD"
	pl = "!echo    aplr=pull rebase -- apl=pull merge -- aplff=pull merge --ff-only -- aplnf=pull merge --no-ff"
	apl = "!echo git pull --verbose $1 $2 $3 $4 $5;git pull --verbose"
	aplr = "!echo git pull --rebase --verbose --autostash $1 $2 $3 $4 $5;git pull --rebase --verbose --autostash"
	aplff = "!echo git pull --verbose --ff-only $1 $2 $3 $4 $5;git pull --verbose --ff-only"
	aplnf = "!echo git pull --verbose --no-ff $1 $2 $3 $4 $5;git pull --verbose --no-ff"
	afea = "!echo git fetch --verbose --all $1 $2 $3 $4 $5;git fetch --verbose --all"
	afe = "!echo git fetch --verbose $1 $2 $3 $4 $5;git fetch --verbose"
	asts = "!echo git stash push --all $1 $2 $3 $4 $5;git stash push --all"
	astu = "!echo git stash pop $1 $2 $3 $4 $5;git stash pop"
	astl = "!echo git stash list $1 $2 $3 $4 $5;git stash list"
[diff]
	algorithm = histogram
[help]
	autocorrect = 1
[core]
	autocrlf = false
	editor = notepad
	symlinks = true
[sequence]
	editor = notepad
[Rebase]
	missingCommitsCheck = error
 	instructionFormat = " |%d %s [%cn] (%cD)"
 	stat = true
[merge]
	algorithm = histogram
[push]
	default = matching
[pretty]
  lg = %Cgreen%h%C(yellow bold)%d %C(blue)%s %C(cyan dim)%cn %C(green dim)%cr%Creset
[branch]
	autosetuprebase = never
[gui]
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[color "status"]
	header = blue
	added = green
	updated = "magenta ul bold"
	changed = green
	untracked = "blue normal ul"
	branch = "green ul"
	nobranch = red
	modified = red
	ui = true
	# normal, black, red, green, yellow, blue, magenta, cyan and white;
	# bold, dim, ul, blink and reverse.
##############################
# [Progressive]
#PG#[user]
#PG#	name = Tony Gray
#PG#	email = agray3@progressive.com
#PG#[merge]
#PG# 	tool = bc3
#PG#[diff]
#PG#	tool = bc3
#PG#[mergetool "bc3"]
#PG#	path = C:/Program Files (x86)/Beyond Compare 4/bcomp.exe
#PG#[difftool]
#PG#	prompt = false
#PG#[credential]
#PG##	interactive = never
#PG##	authority = Windows
#PG#	helper = wincred
#PG#[http]
#PG#	sslbackend = schannel
#PG#	schannelCheckRevoke=false

##############################
# [Home]
#HM#[user]
#HM#	name = Tony Gray
#HM#	email = grayts21@gmail.com
#HM##[mergetool "bc3"]
#HM##	path = C:\Program Files (x86)\WinMerge\WinMergeU.exe
#HM#[mergetool "extMerge"]
#HM#	trustExitCode = false
#HM#[difftool]
#HM#	prompt = false
